{"version":3,"sources":["Objects/endpoints.ts","Loading.tsx","Error.tsx","actualApp/VeranstaltungsSelector/GenerateKalendarModal/GenerateKalendarModal.tsx","api/usePostRequestCalendar.tsx","api/usePostRequestCalendarEmail.tsx","actualApp/VeranstaltungsSelector/VeranstaltungsSelector.tsx","api/useGetRequest.tsx","actualApp/Lander.tsx","App.tsx","reportWebVitals.ts","FAQ/FAQ.tsx","index.tsx"],"names":["baseUrl","Loading","className","Error","error","xmlns","fill","viewBox","d","msg","GenerateKalendarModal","props","useState","email","setEmail","setError","gridRef","useRef","path","veranstaltungsIds","getCalendar","fetch","method","headers","body","JSON","stringify","then","response","a","ok","blob","usePostRequestCalendar","getCalendarEmailResponse","usePostRequestCalendarEmail","length","showKalendarModal","type","disabled","onClick","saveAs","catch","err","message","id","placeholder","onChange","e","target","value","alert","setShowKalendarModal","style","height","ref","rowData","selectedData","onFirstDataRendered","current","api","sizeColumnsToFit","field","width","headerName","VeranstaltungsSelector","history","useHistory","veranstaltungsData","setVeranstaltungsData","selectedDataProp","setSelectedDataProp","setVeranstaltungsIds","loading","setLoading","getData","undefined","json","useGetRequest","useEffect","fetchData","veranstaltungsIdsTemp","getSelectedNodes","map","node","data","push","href","rel","enableRangeSelection","rowSelection","rowMultiSelectWithClick","sortable","filter","checkboxSelection","resizable","floatingFilter","Lander","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FAQ","goBack","src","process","alt","ReactDOM","render","StrictMode","exact","document","getElementById"],"mappings":"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","file":"static/js/main.0222699c.chunk.js","sourcesContent":["export const baseUrl = \"https://moin.meister.ovh:8443\"\n","export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","interface errorProp {\n  msg: string\n}\n\nexport default function Error(error: errorProp){\n  return(\n    <div className=\"alert alert-error m-4\">\n      <div className=\"flex-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n          </svg>\n          <label>{error.msg}</label>\n      </div>\n    </div>\n  )\n}\n","import React, {useRef, useState} from \"react\";\nimport usePostRequestCalendar from \"../../../api/usePostRequestCalendar\";\nimport {baseUrl} from \"../../../Objects/endpoints\";\nimport usePostRequestCalendarEmail from \"../../../api/usePostRequestCalendarEmail\";\nimport {saveAs} from \"file-saver\";\nimport Error from \"../../../Error\";\nimport {AgGridColumn, AgGridReact} from \"ag-grid-react\";\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport '../../../index.scss'\n\nexport interface kalendarModalInterface {\n  showKalendarModal: boolean;\n  setShowKalendarModal: React.Dispatch<React.SetStateAction<boolean>>\n  veranstaltungsIds: number[]\n  selectedData: any[]\n}\n\nexport default function GenerateKalendarModal(props: kalendarModalInterface) {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const gridRef = useRef(null);\n  const {getCalendar} = usePostRequestCalendar({\n    path: `${baseUrl}/sememesteriCal`,\n    veranstaltungsIds: props.veranstaltungsIds\n  })\n  const {getCalendarEmailResponse} = usePostRequestCalendarEmail({\n    path: `${baseUrl}/sememesteriCalEmail`,\n    veranstaltungsIds: props.veranstaltungsIds,\n    email: email\n  })\n\n  const onButtonClickDownloadCalendar = () => {\n    const downloadCalendar = () => {\n      getCalendar().then(blob => saveAs(blob, 'calendar.ics'))\n        .catch(err => {\n            setError(err.message)\n          }\n        );\n    }\n    downloadCalendar();\n  }\n\n  const onEmailWantToSchick = () => {\n    const sentCalendarEmail = () => {\n      getCalendarEmailResponse()\n        .then(response => {\n          alert(\"Deine Email wurde rausgeschickt^^ Wenn du keine E-Mail bekommen hast, versuche es erneut, \" +\n            \"vergiss aber nicht das ich dich nach zu vielen Versuchen fÃ¼r eine gewisse Zeit blockieren werde!\")\n        })\n        .catch(err => {\n            setError(err.message)\n          }\n        );\n    }\n    sentCalendarEmail();\n  }\n\n  if (error.length > 0) {\n    return (\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <>\n      {props.showKalendarModal ?\n        <div className={\"container flex mx-auto z-10 absolute inset-0 justify-center rounded-box h-screen\"}>\n          <div className={\"m-auto rounded-box bg-base-300 w-3/4 xl:w-2/3 2xl:1 h-3/4 flex-none\"}>\n            <div className={\"h-30 p-4\"}>\n              <button className={\"btn btn-lg w-full mb-4\"} type={\"submit\"}\n                      disabled={props.veranstaltungsIds.length === 0}\n                      onClick={onButtonClickDownloadCalendar}>Download calendar.ics\n              </button>\n              <div className={\"rounded-box bg-base-300 grid grid-cols-2 gap-4 mb-4 w-auto\"}>\n                <input\n                  className=\"appearance-none w-full bg-base-200 text-white border border-white rounded py-4 px-4 leading-tight focus:outline-none focus:bg-base-400 text-2xl\"\n                  id=\"grid-first-email\" type=\"text\" placeholder=\"E-Mail\" onChange={e => setEmail(e.target.value)}\n                />\n                <button className={\"btn btn-lg w-full\"} type={\"submit\"} disabled={props.veranstaltungsIds.length === 0}\n                        onClick={onEmailWantToSchick}>Schick's per\n                  E-Mail\n                </button>\n              </div>\n              <button className={\"btn btn-lg w-full mb-4\"} onClick={() => props.setShowKalendarModal(false)}>Abbrechen\n              </button>\n            </div>\n            <p className={\"text-3xl ml-4\"}>AusgewÃ¤hlte Module/Veranstaltungen</p>\n            <div className={\"ag-theme-alpine-dark rounded-box p-4 bg-base-300\"} style={{height: 700}}>\n              <AgGridReact\n                ref={gridRef}\n                rowData={props.selectedData}\n                // @ts-ignore\n                onFirstDataRendered={() => gridRef.current.api.sizeColumnsToFit()}\n              >\n                <AgGridColumn field=\"name\" width={380}\n                              headerName={\"Veranstaltung\"}/>\n                <AgGridColumn field=\"studienGangSemester\" width={400} headerName={\"Fachbereich / Semester\"}/>\n              </AgGridReact>\n            </div>\n          </div>\n        </div>\n        : null}\n    </>\n  );\n}\n","interface PostRequestProps {\n  readonly path: string;\n  readonly veranstaltungsIds: number[];\n}\n\nexport default function usePostRequestCalendar({ path, veranstaltungsIds }: PostRequestProps) {\n  const getCalendar = () => fetch(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({veranstaltungsIds} )\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.blob()\n  });\n\n  return { getCalendar  };\n}\n","interface PostRequestProps {\n  readonly path: string;\n  readonly veranstaltungsIds: number[];\n  readonly email: string;\n}\n\nexport default function usePostRequestCalendar({ path, veranstaltungsIds, email }: PostRequestProps) {\n  const getCalendarEmailResponse = () => fetch(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({veranstaltungsIds, email} )\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not send E-Mail\");\n    }\n    return response\n  });\n\n  return { getCalendarEmailResponse  };\n}\n","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport Veranstaltung from \"../../Objects/Veranstaltung\";\nimport {baseUrl} from \"../../Objects/endpoints\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\nimport {AgGridColumn, AgGridReact} from \"ag-grid-react\";\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport '../../index.scss'\nimport GenerateKalendarModal from \"./GenerateKalendarModal/GenerateKalendarModal\";\n\nexport default function VeranstaltungsSelector() {\n  const history = useHistory();\n  const [veranstaltungsData, setVeranstaltungsData] = useState([] as Veranstaltung[]);\n  const [selectedDataProp, setSelectedDataProp] = useState([])\n  const [veranstaltungsIds, setVeranstaltungsIds] = useState([] as number[])\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showKalendarModal, setShowKalendarModal] = useState(false);\n  const veranstaltungsPath = `${baseUrl}/getVeranstaltungen`;\n  const {getData} = useGetRequest({path: veranstaltungsPath})\n  const gridRef = useRef(null)\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json) {\n        setVeranstaltungsData(json);\n        setLoading(false)\n      }).catch(err => {\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleClick() {\n    history.push(\"/FAQ\");\n  }\n\n  const onHolDirKalender = () => {\n    let veranstaltungsIdsTemp = [] as number[]\n    // @ts-ignore\n    const selectedNodes = gridRef.current.api.getSelectedNodes()\n    // @ts-ignore\n    const selectedData = selectedNodes.map(node => node.data)\n    // @ts-ignore\n    selectedData.map(node => veranstaltungsIdsTemp.push(node.id))\n    setSelectedDataProp(selectedData)\n    setVeranstaltungsIds(veranstaltungsIdsTemp)\n    setShowKalendarModal(true);\n  }\n\n  if (loading) {\n    return <Loading/>\n  }\n\n  if (error.length > 0) {\n    return (\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <>\n      <GenerateKalendarModal showKalendarModal={showKalendarModal} setShowKalendarModal={setShowKalendarModal}\n                             selectedData={selectedDataProp} veranstaltungsIds={veranstaltungsIds}/>\n      <div className={showKalendarModal ? \"filter blur-lg\" : \"\"}>\n        <div className={\"grid grid-rows-3 grid-rows-none gap-4 2xl:w-10/12 mb-4 xl:w-11/12\"}>\n          <div className={\"rounded-box p-4 bg-base-300 \"}>\n            <h2 className={\"text-4xl mb-2\"}>H-BRS iCal Kalendergenerator</h2>\n            <p>Die Seite befindet sich noch in der Beta Phase, Fehler bitte melden! (a@andrevr.de)</p>\n            <p>Ich Ã¼bernehme keine Haftung fÃ¼r die Richtigkeit der generierten Daten, alles nach bestem Wissen und\n              Gewissen.</p>\n            <p>Stundenplanstand 17.10.2021 / 20:32</p>\n          </div>\n          <div className={\"grid grid-cols-3 gap-4 rounded-box p-3 bg-base-300\"}>\n            <button onClick={onHolDirKalender} className={\"btn btn-lg w-full\"}>Hol dir deinen Kalender!</button>\n            <a href={\"https://github.com/Hochgesand/H-BRSiCalGenerator\"} target=\"_blank\" rel=\"noopener noreferrer\">\n              <button className={\"btn btn-lg w-full\"}>Gib mir einen Stern auf Github â¤</button>\n            </a>\n            <button className={\"btn btn-lg w-full\"} onClick={handleClick}>HILFE!</button>\n          </div>\n        </div>\n\n        <div className={\"ag-theme-alpine-dark rounded-box p-3 bg-base-300\"} style={{height: 800}}>\n          <AgGridReact\n            rowData={veranstaltungsData}\n            enableRangeSelection={true}\n            rowSelection={\"multiple\"}\n            ref={gridRef}\n            rowMultiSelectWithClick={true}\n            // @ts-ignore\n            onFirstDataRendered={() => gridRef.current.api.sizeColumnsToFit()}\n          >\n            <AgGridColumn field=\"name\" width={380} sortable={true} filter={true} checkboxSelection={true}\n                          resizable={true}\n                          headerName={\"Veranstaltung\"} floatingFilter={true}/>\n            <AgGridColumn field=\"studienGangSemester\" width={400} sortable={true} filter={true} resizable={true}\n                          floatingFilter={true} headerName={\"Fachbereich / Semester\"}/>\n            <AgGridColumn field=\"prof\" width={150} sortable={true} filter={true} resizable={true}\n                          floatingFilter={true}/>\n          </AgGridReact>\n        </div>\n      </div>\n    </>\n  );\n\n}\n","interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      throw Error(\"Could not fetch data\");\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","import VeranstaltungsSelector from \"./VeranstaltungsSelector/VeranstaltungsSelector\";\n\nexport default function Lander() {\n  return(\n    <div>\n      <VeranstaltungsSelector/>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport Lander from \"./actualApp/Lander\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Lander/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useHistory} from \"react-router-dom\";\n\nexport default function FAQ(){\n  let history = useHistory();\n  return(\n    <div className={\"p-5 flex-col gap-3\"}>\n      <button\n        className=\"btn btn-lg mb-4\"\n        onClick={() => history.goBack()}>\n        Back\n      </button>\n      <div className={\"rounded-box p-4 bg-base-300 flex-grow-0 w-1/2\"}>\n        <p className={\"text-3xl\"}>Anleitung:</p>\n        <p className={\"text-2xl\"}>Schritt 1:</p>\n        <p>WÃ¤hle dir einfach alle Veranstaltungen aus die du besuchen mÃ¶chtest.\n          Du kannst die Tabelle nach belieben sortieren und mit dem Burgerbutton kannst du auch gezielt\n          nach Keywords suchen. Wenn du alle Veranstaltungen ausgewÃ¤hlt hast klicke auf \"Hol dir deinen Kalender\" ... </p>\n        <p className={\"text-2xl\"}>Schritt 2: </p>\n        <p>Jetzt hast du zwei MÃ¶glichkeiten:\n          1.: Klicke auf \"Download calendar.ics\" und importiere es wie in Beispiel 3 einfach selber am Rechner.\n          2.: Tippe deine E-Mail Adresse ein und lasse es dir bequem per E-Mail Schicken. Klicke dafÃ¼r einfach nachdem\n           du deine E-Mail Adresse eingetragen hast auf \"Schick's per E-Mail\".\n          Damit kriegste dann die ics auf's Handy und kannst sie ggf. sogar noch einfacher importieren.\n        </p>\n        <p className={\"text-2xl\"}>Misc:</p>\n        <p>Packages und Technologien die ich benutzt habe:</p>\n        <p>Spring Boot (Java):</p>\n        <ul>\n          <li> - Apache POI um Exceltabellen zu parsen</li>\n          <li> - ical4j um den Calender zu generieren</li>\n        </ul>\n        <p>React:</p>\n        <ul>\n          <li> - AGGrid fÃ¼r die Tabelle, kein Bock gehabt selber Sortieralgorithmen zu implementieren</li>\n          <li> - Locker noch ca. 2000 Packages mehr die mit React gekommen sind, npm macht npm sachen</li>\n        </ul>\n        <p className={\"text-2xl\"}>FAQ:</p>\n        <p>Q: Warum machste die App nicht responsive damit ich das auch bequem auf dem Handy nutzen kann?</p>\n        <p>A: Warum nutzt du die App nicht einfach auf dem Rechner?</p>\n        <p>Q: Warum werden manche Veranstaltungen doppelt angezeigt?</p>\n        <p>A: Manche Veranstaltungen gibt es Fachbereich/Semester Ã¼bergreifend und ich habe noch kein Ablauf im Backend\n          implementiert die schaut ob die Eventuhrzeiten/RÃ¤ume Ã¼bereinstimmen damit ich gewÃ¤hrleisten kann das die auch\n          tatsÃ¤chlich die gleichen Veranstaltungen sind. Beispielsweise kÃ¶nnte ja eine Veranstaltung fÃ¼r Nachschreiber\n          existieren und damit z.B. in einem anderen Raum stattfinden.\n          WÃ¤hlt daher immer die Veranstaltung fÃ¼r euren Fachbereich/Semester.</p>\n        <p>Q: Wie kriegst du die StundenplÃ¤ne in die Anwendung importiert?</p>\n        <p>A: Aktuell importiere ich die StundenplÃ¤ne noch per Hand. Ich arbeite daran die StundenplÃ¤ne von Eva zu webscrapen.\n          HeiÃt wenn sich die StundenplÃ¤ne aktualisieren kann es passieren das die hier noch nicht uptodate sind.\n          Wenn ihr da mehr wisst, sagt mir gerne bescheid und ich aktualisiere alle StundenplÃ¤ne. Sobald das\n          Webscraping implementiert ist wird dieser FAQ Eintrag verschwinden.</p>\n      </div>\n\n      <div className={\"mt-5\"}>\n        <p className={\"text-3xl\"}>Beispiel 1: \"Ich bin bei Herr Berrendorf in EidiP und gehÃ¶re der Gruppe D an.</p>\n        <img src={process.env.PUBLIC_URL + \"/FUiTCuS2BJ.gif\"} alt={\"\"}/>\n      </div>\n      <div className={\"mt-5\"}>\n        <p className={\"text-3xl\"}>Beispiel 2: \"Hilfe ich sehe nicht den ganzen Text!</p>\n        <img src={process.env.PUBLIC_URL + \"/aTkfaQusHi.gif\"} alt={\"\"}/>\n      </div>\n      <div className={\"mt-5\"}>\n        <p className={\"text-3xl\"}>Beispiel 3: \"Is ja alles schÃ¶n und toll, aber was mache ich jetzt mit dieser komischen\n          calendar.ics Datei (Beispiel an Google Kalender)\"</p>\n        <img src={process.env.PUBLIC_URL + \"/Z795yqtZO4.gif\"} alt={\"\"}/>\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport FAQ from \"./FAQ/FAQ\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/FAQ\">\n          <FAQ/>\n        </Route>\n        <Route path=\"/\">\n          <App/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}