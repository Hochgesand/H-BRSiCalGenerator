{"version":3,"sources":["Objects/endpoints.ts","api/useGetRequest.tsx","Loading.tsx","Error.tsx","api/usePostRequestCalendar.tsx","actualApp/VeranstaltungsSelector/GenerateKalendarModal/GenerateKalendarModal.tsx","api/usePostRequestCalendarEmail.tsx","actualApp/VeranstaltungsSelector/VeranstaltungsSelector.tsx","actualApp/Lander.tsx","App.tsx","reportWebVitals.ts","FAQ/FAQ.tsx","index.tsx"],"names":["baseUrl","useGetRequest","path","getData","fetch","method","headers","undefined","then","response","a","ok","text","Error","status","json","Loading","className","error","xmlns","fill","viewBox","d","msg","usePostRequestCalendar","veranstaltungsIds","getCalendar","body","JSON","stringify","blob","GenerateKalendarModal","props","useState","email","setEmail","setError","downloadUrl","loading","setLoading","postGetiCal","postGetCSV","getCalendarEmailResponse","usePostRequestCalendarEmail","showKalendarModal","length","type","disabled","onClick","console","log","saveAs","setShowKalendarModal","catch","err","message","id","placeholder","onChange","e","target","value","alert","selectedData","map","veranstaltung","htmlFor","name","prof","VeranstaltungsSelector","history","useHistory","veranstaltungsData","setVeranstaltungsData","selectedDataProp","setSelectedDataProp","setVeranstaltungsIds","useEffect","fetchData","push","selectedIdsOfVeranstaltungen","forEach","x","stopPropagation","showCalendarGenerationModal","event","checked","i","newSelectedItems","selectedVeranstaltung","find","addItemToSelectedItems","removeItemToSelectedItems","Lander","studiengaenge","setStudiengaenge","selectedStudiengang","setSelectedStudiengang","href","rel","tabIndex","studiengang","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FAQ","goBack","src","process","alt","ReactDOM","render","StrictMode","exact","document","getElementById"],"mappings":"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","file":"static/js/main.1078093d.chunk.js","sourcesContent":["export const baseUrl = \"https://moin.meister.ovh:8443\"\n//Option for docker-compose\n//export const baseUrl = \"http://localhost:8090\"\n","interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      return response.text().then(text => {throw Error(response.status + \": \" + text)});\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","interface errorProp {\r\n  msg: string\r\n}\r\n\r\nexport default function Error(error: errorProp){\r\n  return(\r\n    <div className=\"alert alert-error mb-4\">\r\n      <div className=\"flex-1\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\r\n          </svg>\r\n          <label>{error.msg}. Too Many Requests? Warte am besten etwas :D</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","interface PostRequestProps {\n  readonly path: string;\n  readonly veranstaltungsIds: number[];\n}\n\nexport default function usePostRequestCalendar({ path, veranstaltungsIds }: PostRequestProps) {\n  const getCalendar = () => fetch(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({veranstaltungsIds} )\n  }).then(async (response) => {\n    if (!response.ok){\n      return response.text().then(text => {throw Error(text)});\n    }\n    return response.blob()\n  });\n\n  return { getCalendar  };\n}\n","import React, {useState} from \"react\";\r\nimport usePostRequestCalendar from \"../../../api/usePostRequestCalendar\";\r\nimport {baseUrl} from \"../../../Objects/endpoints\";\r\nimport usePostRequestCalendarEmail from \"../../../api/usePostRequestCalendarEmail\";\r\nimport {saveAs} from \"file-saver\";\r\nimport Error from \"../../../Error\";\r\n\r\nimport '../../../index.scss'\r\nimport Veranstaltung from \"../../../Objects/Veranstaltung\";\r\n\r\nexport interface kalendarModalInterface {\r\n    showKalendarModal: boolean;\r\n    setShowKalendarModal: React.Dispatch<React.SetStateAction<boolean>>\r\n    veranstaltungsIds: number[]\r\n    selectedData: Veranstaltung[]\r\n}\r\n\r\nexport default function GenerateKalendarModal(props: kalendarModalInterface) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    let downloadUrl: string = \"\";\r\n    const [loading, setLoading] = useState(false)\r\n    const postGetiCal = usePostRequestCalendar({\r\n        path: (`${baseUrl}/sememesteriCal`),\r\n        veranstaltungsIds: props.veranstaltungsIds\r\n    })\r\n    const postGetCSV = usePostRequestCalendar({\r\n        path: (`${baseUrl}/sememesteriCalAsCSV`),\r\n        veranstaltungsIds: props.veranstaltungsIds\r\n    })\r\n    const {getCalendarEmailResponse} = usePostRequestCalendarEmail({\r\n        path: `${baseUrl}/sememesteriCalEmail`,\r\n        body: {\r\n            veranstaltungsIds: props.veranstaltungsIds,\r\n            email: email\r\n        }\r\n    })\r\n\r\n    const onButtonClickDownloadCalendar = () => {\r\n        setLoading(true)\r\n        const downloadCalendar = () => {\r\n            postGetiCal.getCalendar().then(blob => {\r\n                setLoading(false)\r\n                saveAs(blob, 'calendar.ics')\r\n                props.setShowKalendarModal(false)\r\n                setError(\"\")\r\n            })\r\n                .catch(err => {\r\n                        setError(err.message)\r\n                        console.log(error)\r\n                        setLoading(false)\r\n                    }\r\n                );\r\n        }\r\n        downloadCalendar();\r\n    }\r\n\r\n    const onButtonClickDownloadCalendarAsCsv = () => {\r\n        setLoading(true)\r\n        const downloadCalendar = () => {\r\n            postGetCSV.getCalendar().then(blob => {\r\n                setLoading(false)\r\n                saveAs(blob, 'calendar.csv')\r\n                props.setShowKalendarModal(false)\r\n                setError(\"\")\r\n            })\r\n                .catch(err => {\r\n                        setError(err.message)\r\n                        console.log(error)\r\n                        setLoading(false)\r\n                    }\r\n                );\r\n        }\r\n        downloadCalendar();\r\n    }\r\n\r\n    const onEmailWantToSchick = () => {\r\n        setLoading(true)\r\n        const sentCalendarEmail = () => {\r\n            getCalendarEmailResponse()\r\n                .then(async response => {\r\n                    setLoading(false)\r\n                    alert(await response.text())\r\n                    setError(\"\")\r\n                    props.setShowKalendarModal(false)\r\n                })\r\n                .catch(err => {\r\n                        setError(err.message)\r\n                        console.log(error)\r\n                        setLoading(false)\r\n                    }\r\n                );\r\n        }\r\n        sentCalendarEmail();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.showKalendarModal ?\r\n                <div className={\"container flex mx-auto z-10 absolute inset-0 justify-center rounded-box h-screen\"}>\r\n                    <div\r\n                        className={\"m-auto rounded-box bg-base-300 md:w-3/4 w-full xl:w-2/3 2xl:1 h-screen flex-none z-20\"}>\r\n                        <div className={\"p-4\"}>\r\n                            {error.length > 0 ? <Error msg={error}/> : null}\r\n                            <div className={\"grid grid-cols-2 grid-rows-1 gap-4\"}>\r\n                                <button className={`btn h-14 md:btn-lg w-full mb-4 ${loading ? 'loading' : null}`}\r\n                                        type={\"submit\"}\r\n                                        disabled={props.veranstaltungsIds.length === 0 || loading}\r\n                                        onClick={() => {\r\n                                            downloadUrl = (`${baseUrl}/sememesteriCal`)\r\n                                            console.log(downloadUrl)\r\n                                            onButtonClickDownloadCalendar()\r\n                                        }}>Download calendar.ics\r\n                                </button>\r\n                                <button className={`btn h-14 md:btn-lg w-full mb-4 ${loading ? 'loading' : null}`}\r\n                                        type={\"submit\"}\r\n                                        disabled={props.veranstaltungsIds.length === 0 || loading}\r\n                                        onClick={() => {\r\n                                            downloadUrl = `${baseUrl}/sememesteriCalAsCSV`\r\n                                            onButtonClickDownloadCalendarAsCsv()\r\n                                        }}>Download Kalender as CSV\r\n                                </button>\r\n                            </div>\r\n                            <div className={\"rounded-box bg-base-200 h-6 w-full mb-4\"}><p\r\n                                className={\"w-full text-center\"}>ODER</p></div>\r\n                            <div className={\"rounded-box bg-base-300 grid grid-cols-2 gap-4 mb-4 w-auto\"}>\r\n                                <input\r\n                                    className=\"appearance-none w-full bg-base-200 border border-white rounded py-4 px-4 leading-tight focus:outline-none focus:bg-base-400 text-2xl\"\r\n                                    id=\"grid-first-email\" type=\"email\" placeholder=\"E-Mail\"\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                                <button className={`btn btn-lg w-full ${loading ? 'loading' : null}`} type={\"submit\"}\r\n                                        disabled={props.veranstaltungsIds.length === 0 || loading || email.length === 0}\r\n                                        onClick={onEmailWantToSchick}>Schick's per E-Mail\r\n                                </button>\r\n                            </div>\r\n                            <button className={\"btn btn-md w-full md:mb-4\"} onClick={() => {\r\n                                props.setShowKalendarModal(false)\r\n                                setError(\"\")\r\n                            }} disabled={loading}>Abbrechen\r\n                            </button>\r\n                        </div>\r\n                        <div className={\"rounded-box p-3 bg-base-300 md:w-3/4 w-full m-auto pl-5 pr-5\"}>\r\n                            <p className={\"text-3xl mb-4\"}>Ausgewählte Module/Veranstaltungen</p>\r\n                            <fieldset className=\"border-t border-b border-gray-500\">\r\n                                <div className=\"divide-y divide-gray-500\">\r\n                                    {props.selectedData.map((veranstaltung) => (\r\n                                        <div className=\"relative flex items-start py-2 md:py-4\">\r\n                                            <div className=\"min-w-0 flex-1 text-sm\">\r\n                                                <label htmlFor=\"comments\" className=\"font-medium text-gray-700\">\r\n                                                    {veranstaltung.name}\r\n                                                </label>\r\n                                                <p id=\"comments-description\" className=\"text-gray-500\">\r\n                                                    {veranstaltung.prof}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : null}\r\n        </>\r\n    );\r\n}\r\n","interface PostRequestProps {\n  readonly path: string;\n  readonly body: any;\n}\n\nexport default function usePostRequestCalendar({ path, body: {veranstaltungsIds, email} }: PostRequestProps) {\n  const getCalendarEmailResponse = () => fetch(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({veranstaltungsIds, email} )\n  }).then(async (response) => {\n    if (!response.ok){\n      return response.text().then(text => {throw Error(text + \"soos\")});\n    }\n    return response\n  });\n\n  return { getCalendarEmailResponse  };\n}\n","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport Veranstaltung from \"../../Objects/Veranstaltung\";\nimport {baseUrl} from \"../../Objects/endpoints\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\n\nimport '../../index.scss'\nimport GenerateKalendarModal from \"./GenerateKalendarModal/GenerateKalendarModal\";\n\ninterface veranstaltungsProp {\n    readonly veranstaltung: string\n}\n\nexport default function VeranstaltungsSelector({veranstaltung}: veranstaltungsProp) {\n    const history = useHistory();\n    const [veranstaltungsData, setVeranstaltungsData] = useState([] as Veranstaltung[]);\n    const [selectedDataProp, setSelectedDataProp] = useState([] as Veranstaltung[])\n    const [veranstaltungsIds, setVeranstaltungsIds] = useState([] as number[])\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [showKalendarModal, setShowKalendarModal] = useState(false);\n    const veranstaltungsPath = `${baseUrl}/getVeranstaltungByStudiengang?studiengang=${veranstaltung}`;\n    const {getData} = useGetRequest({path: veranstaltungsPath})\n\n    useEffect(() => {\n        async function fetchData() {\n            await getData().then(function (json) {\n                setVeranstaltungsData(json);\n                setLoading(false)\n                setError(\"\")\n            }).catch(err => {\n                    console.log(err.message)\n                    setError(err.message)\n                    setLoading(false);\n                }\n            );\n        }\n\n        fetchData();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    function showHelp() {\n        history.push(\"/FAQ\");\n    }\n\n    const showCalendarGenerationModal = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        let selectedIdsOfVeranstaltungen: number[] = []\n        selectedDataProp.forEach(x => selectedIdsOfVeranstaltungen.push(x.id))\n        setVeranstaltungsIds(selectedIdsOfVeranstaltungen)\n        e.stopPropagation()\n        setError(\"\")\n        setShowKalendarModal(true);\n    }\n\n    const addItemToSelectedItems = (i: number) => {\n        let newSelectedItems = selectedDataProp\n\n        let selectedVeranstaltung: Veranstaltung = veranstaltungsData.find(x => {\n            if (x.id === i)\n                return x\n            return null\n        })!\n\n        if (selectedVeranstaltung === null)\n            return\n\n        newSelectedItems.push(selectedVeranstaltung)\n        setSelectedDataProp(newSelectedItems)\n    }\n\n    const removeItemToSelectedItems = (i: number) => {\n        let newSelectedItems: Veranstaltung[] = []\n        selectedDataProp.forEach(x => {\n            if (x.id !== i)\n                newSelectedItems.push(x)\n        })\n        setSelectedDataProp(newSelectedItems)\n    }\n\n    if (loading) {\n        return <Loading/>\n    }\n\n    if (error.length > 0) {\n        return (\n            <Error msg={error}/>\n        );\n    }\n\n    return (\n        <>\n            <GenerateKalendarModal showKalendarModal={showKalendarModal} setShowKalendarModal={setShowKalendarModal}\n                                   selectedData={selectedDataProp} veranstaltungsIds={veranstaltungsIds}/>\n\n            <div className={showKalendarModal ? \"filter blur-lg\" : \"\"} onClick={() => setShowKalendarModal(false)}>\n                <div\n                    className={\"grid grid-rows-3 grid-rows-none gap-4 2xl:w-10/12 mb-4 xl:w-11/12 m-auto max-h-screen\"}>\n                    <div className={\"rounded-box md:p-4 p-2 bg-base-300\"}>\n                        <h2 className={\"md:text-4xl text-2xl mb-2 text-center\"}>H-BRS Kalendergenerator v1.1</h2>\n                    </div>\n                    <div\n                        className={\"grid md:grid-cols-2 md:grid-rows-1 grid-cols-1 grid-rows-2 gap-4 rounded-box p-3 bg-base-300 md:w-3/4 w-full m-auto\"}>\n                        <button className={\"btn md:btn-lg w-fully\"} onClick={showHelp}>FAQ / HILFE!</button>\n                        <button onClick={e => showCalendarGenerationModal(e)}\n                                className={\"btn md:btn-lg w-full\"}>Kalender generieren!\n                        </button>\n                    </div>\n\n                    <div className={\"rounded-box p-3 bg-base-300 md:w-3/4 w-full m-auto\"}>\n                        <fieldset className=\"border-t border-b border-gray-500\">\n                            <div className=\"divide-y divide-gray-500\">\n                                {veranstaltungsData.map((veranstaltung) => (\n                                    <div className=\"relative flex items-start py-2 md:py-4\">\n                                        <div className=\"mr-3 m-auto flex items-center h-5\">\n                                            <input\n                                                id=\"comments\"\n                                                aria-describedby=\"comments-description\"\n                                                name=\"comments\"\n                                                type=\"checkbox\"\n                                                onChange={event => {\n                                                    if (event.target.checked) {\n                                                        addItemToSelectedItems(veranstaltung.id)\n                                                    } else {\n                                                        removeItemToSelectedItems(veranstaltung.id)\n                                                    }\n                                                }}\n                                                className=\"focus:ring-base-500 h-10 w-10 text-indigo-600 border-gray-300 rounded\"\n                                            />\n                                        </div>\n                                        <div className=\"min-w-0 flex-1 text-sm\">\n                                            <label htmlFor=\"comments\" className=\"font-medium text-gray-700\">\n                                                {veranstaltung.name}\n                                            </label>\n                                            <p id=\"comments-description\" className=\"text-gray-500\">\n                                                {veranstaltung.prof}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </fieldset>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n\n}\n","import VeranstaltungsSelector from \"./VeranstaltungsSelector/VeranstaltungsSelector\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {baseUrl} from \"../Objects/endpoints\";\r\nimport useGetRequest from \"../api/useGetRequest\";\r\nimport Loading from \"../Loading\";\r\nimport Error from \"../Error\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function Lander() {\r\n  const history = useHistory();\r\n  const studiengaengePath = `${baseUrl}/getStudiengaenge`;\r\n  const {getData} = useGetRequest({path: studiengaengePath})\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [studiengaenge, setStudiengaenge] = useState([] as string[]);\r\n  const [selectedStudiengang, setSelectedStudiengang] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await getData().then(function (json) {\r\n        setStudiengaenge(json);\r\n        setLoading(false)\r\n        setError(\"\")\r\n      }).catch(err => {\r\n          console.log(err.message)\r\n          setError(err.message)\r\n          setLoading(false);\r\n        }\r\n      );\r\n    }\r\n\r\n    fetchData();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  function showHelp() {\r\n    history.push(\"/FAQ\");\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading/>\r\n  }\r\n\r\n  if (error.length > 0) {\r\n    return (\r\n      <Error msg={error}/>\r\n    );\r\n  }\r\n\r\n  return(\r\n    <div className={\"max-h-screen\"}>\r\n        {selectedStudiengang.length === 0 ? <div className={\"rounded-box p-3 bg-base-300 md:w-1/2 w-full m-auto\"}>\r\n          <div className={\"rounded-box p-4 bg-base-100 mb-4\"}>\r\n            <h2 className={\"text-4xl mb-2 text-center\"}>H-BRS Kalendergenerator v1.1</h2>\r\n            <p>Ich übernehme keine Haftung für die Richtigkeit der generierten Daten, alles nach bestem Wissen und\r\n              Gewissen. </p>\r\n            <p>Fehler bitte an a@andrevr.de melden.</p>\r\n            <p>Jetzt auch mobileoptimized/responsive!</p>\r\n            <p>Wenn's euch gefällt, empfehlt es euren Kommilitonen! 😁</p>\r\n          </div>\r\n          <div className={\"dropdown w-full\"}>\r\n            <a href={\"https://github.com/Hochgesand/H-BRSiCalGenerator\"} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <button className={\"btn md:btn-lg w-full mb-2 btn-ghost\"}>Gib mir einen Stern auf Github ❤</button>\r\n            </a>\r\n            <button className={\"btn md:btn-lg w-full\"} onClick={showHelp}>FAQ / HILFE!</button>\r\n            <div tabIndex={0} className=\"btn md:btn-lg w-full mt-2\">Bitte Studiengang auswählen!</div>\r\n            <ul tabIndex={0} className=\"p-2 shadow menu dropdown-content bg-base-300 rounded-box w-full\">\r\n              {studiengaenge.map(studiengang => (\r\n                <li className={\"m-1 text-white\"}>\r\n                  <button\r\n                    className={\"btn\"}\r\n                    onClick={() => setSelectedStudiengang(studiengang)}\r\n                  >\r\n                    {studiengang}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n        </div>\r\n      </div> : \"\"}\r\n\r\n      {selectedStudiengang.length !== 0 ? <VeranstaltungsSelector veranstaltung={selectedStudiengang}/> : \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport Lander from \"./actualApp/Lander\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Lander/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useHistory} from \"react-router-dom\";\r\n\r\nexport default function FAQ(){\r\n  let history = useHistory();\r\n  return(\r\n    <div className={\"p-5 flex-col gap-3\"}>\r\n      <button\r\n        className=\"btn btn-lg mb-4\"\r\n        onClick={() => history.goBack()}>\r\n        Back\r\n      </button>\r\n      <div className={\"rounded-box p-4 bg-base-300 flex-grow-0 w-full md:w-3/4\"}>\r\n        <p className={\"text-3xl\"}>Anleitung:</p>\r\n        <p className={\"text-2xl\"}>Schritt 1:</p>\r\n        <p>Wähle dir einfach alle Veranstaltungen aus die du besuchen möchtest.\r\n          Du kannst die Tabelle nach belieben sortieren und mit dem Burgerbutton kannst du auch gezielt\r\n          nach Keywords suchen. Wenn du alle Veranstaltungen ausgewählt hast klicke auf \"Hol dir deinen Kalender\" ... </p>\r\n        <p className={\"text-2xl\"}>Schritt 2: </p>\r\n        <p>Jetzt hast du zwei Möglichkeiten:\r\n          1.: Klicke auf \"Download calendar.ics\" und importiere es wie in Beispiel 3 einfach selber am Rechner.\r\n          2.: Tippe deine E-Mail Adresse ein und lasse es dir bequem per E-Mail Schicken. Klicke dafür einfach nachdem\r\n           du deine E-Mail Adresse eingetragen hast auf \"Schick's per E-Mail\".\r\n          Damit kriegste dann die ics auf's Handy und kannst sie ggf. sogar noch einfacher importieren.\r\n        </p>\r\n        <p className={\"text-2xl\"}>Misc:</p>\r\n        <p>Packages und Technologien die ich benutzt habe:</p>\r\n        <p>Spring Boot (Java):</p>\r\n        <ul>\r\n          <li> - Apache POI um Exceltabellen zu parsen</li>\r\n          <li> - ical4j um den Calender zu generieren</li>\r\n        </ul>\r\n        <p>React:</p>\r\n        <ul>\r\n          <li> - AGGrid für die Tabellen</li>\r\n          <li> - TailwindCSS für's CSS</li>\r\n        </ul>\r\n        <p className={\"text-2xl\"}>FAQ:</p>\r\n        <p>Q: Wie kriegst du die Stundenpläne in die Anwendung importiert?</p>\r\n        <p>A: Ich zieh mir einfach die Stundenpläne von Eva und aktualisiere Sie jeden Tag damit alle Änderungen frisch\r\n          auf meinem Backend liegen.</p>\r\n        <p>Q: Welche Daten erhebst du?</p>\r\n        <p>A: Fast keine. Ich logge nichts und möchte das auch nicht. Die einzigen Dinge die ich speichere sind IP Adressen die die Api missbrauchen.</p>\r\n        <p>Q: Und wann wird meine IP-Adresse gespeichert?</p>\r\n        <p>A: Sobald ihr ein 429er Error bekommt (Too Many Requests) wird eure IP Adresse gespeichert.</p>\r\n      </div>\r\n\r\n      <div className={\"mt-5\"}>\r\n        <p className={\"text-3xl\"}>Beispiel 1: \"Ich bin bei Herr Berrendorf in EidiP und gehöre der Übungsgruppe D an.</p>\r\n        <img src={process.env.PUBLIC_URL + \"/FUiTCuS2BJ.gif\"} alt={\"\"}/>\r\n      </div>\r\n      <div className={\"mt-5\"}>\r\n        <p className={\"text-3xl\"}>Beispiel 2: \"Hilfe ich sehe nicht den ganzen Text!</p>\r\n        <img src={process.env.PUBLIC_URL + \"/aTkfaQusHi.gif\"} alt={\"\"}/>\r\n      </div>\r\n      <div className={\"mt-5\"}>\r\n        <p className={\"text-3xl\"}>Beispiel 3: \"Is ja alles schön und toll, aber was mache ich jetzt mit dieser komischen\r\n          calendar.ics Datei? (Beispiel an Google Kalender)\"</p>\r\n        <img src={process.env.PUBLIC_URL + \"/Z795yqtZO4.gif\"} alt={\"\"}/>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport FAQ from \"./FAQ/FAQ\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/FAQ\">\n          <FAQ/>\n        </Route>\n        <Route path=\"/\">\n          <App/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}