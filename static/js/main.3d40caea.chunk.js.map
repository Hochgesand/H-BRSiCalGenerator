{"version":3,"sources":["Objects/endpoints.ts","api/useGetRequest.tsx","Loading.tsx","Error.tsx","api/usePostRequestCalendar.tsx","actualApp/VeranstaltungsSelector/GenerateKalendarModal/GenerateKalendarModal.tsx","api/usePostRequestCalendarEmail.tsx","actualApp/VeranstaltungsSelector/VeranstaltungsSelector.tsx","actualApp/Lander.tsx","App.tsx","reportWebVitals.ts","FAQ/FAQ.tsx","index.tsx"],"names":["baseUrl","useGetRequest","path","getData","fetch","method","headers","undefined","then","response","a","ok","text","Error","status","json","Loading","className","error","xmlns","fill","viewBox","d","msg","usePostRequestCalendar","veranstaltungsIds","getCalendar","body","JSON","stringify","blob","GenerateKalendarModal","props","useState","email","setEmail","setError","downloadUrl","loading","setLoading","gridRef","useRef","postGetiCal","postGetCSV","getCalendarEmailResponse","usePostRequestCalendarEmail","showKalendarModal","length","type","disabled","onClick","console","log","saveAs","setShowKalendarModal","catch","err","message","id","placeholder","onChange","e","target","value","alert","ref","rowData","selectedData","onFirstDataRendered","current","api","sizeColumnsToFit","field","width","headerName","VeranstaltungsSelector","veranstaltung","history","useHistory","veranstaltungsData","setVeranstaltungsData","selectedDataProp","setSelectedDataProp","setVeranstaltungsIds","useEffect","fetchData","veranstaltungsIdsTemp","getSelectedNodes","map","node","data","push","stopPropagation","showCalendarGenerationModal","href","rel","style","height","enableRangeSelection","rowSelection","rowMultiSelectWithClick","sortable","filter","checkboxSelection","resizable","floatingFilter","Lander","studiengaenge","setStudiengaenge","selectedStudiengang","setSelectedStudiengang","tabIndex","studiengang","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","FAQ","goBack","src","process","alt","ReactDOM","render","StrictMode","exact","document","getElementById"],"mappings":"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","file":"static/js/main.3d40caea.chunk.js","sourcesContent":["export const baseUrl = \"https://moin.meister.ovh:8443\"\n//Option for docker-compose\n//export const baseUrl = \"http://localhost:8090\"\n","interface GetRequestProps {\n  readonly path: string;\n}\n\nexport default function useGetRequest({ path }: GetRequestProps) {\n  const getData = () => fetch(path, {\n    method: \"get\",\n    headers: \"\"\n      ? new Headers({\n        \"Content-Type\": \"application/json\"\n      }) : undefined\n  }).then(async (response) => {\n    if (!response.ok){\n      return response.text().then(text => {throw Error(response.status + \": \" + text)});\n    }\n    return response.json()\n  });\n\n  return { getData  };\n}\n","export default function Loading(){\n  return(\n    <button className=\"btn btn-lg loading\">loading</button>\n  );\n}\n","interface errorProp {\n  msg: string\n}\n\nexport default function Error(error: errorProp){\n  return(\n    <div className=\"alert alert-error mb-4\">\n      <div className=\"flex-1\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"w-6 h-6 mx-2 stroke-current\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"/>\n          </svg>\n          <label>{error.msg}</label>\n      </div>\n    </div>\n  )\n}\n","interface PostRequestProps {\n  readonly path: string;\n  readonly veranstaltungsIds: number[];\n}\n\nexport default function usePostRequestCalendar({ path, veranstaltungsIds }: PostRequestProps) {\n  const getCalendar = () => fetch(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({veranstaltungsIds} )\n  }).then(async (response) => {\n    if (!response.ok){\n      return response.text().then(text => {throw Error(text)});\n    }\n    return response.blob()\n  });\n\n  return { getCalendar  };\n}\n","import React, {useRef, useState} from \"react\";\r\nimport usePostRequestCalendar from \"../../../api/usePostRequestCalendar\";\r\nimport {baseUrl} from \"../../../Objects/endpoints\";\r\nimport usePostRequestCalendarEmail from \"../../../api/usePostRequestCalendarEmail\";\r\nimport {saveAs} from \"file-saver\";\r\nimport Error from \"../../../Error\";\r\nimport {AgGridColumn, AgGridReact} from \"ag-grid-react\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\r\nimport '../../../index.scss'\r\n\r\nexport interface kalendarModalInterface {\r\n  showKalendarModal: boolean;\r\n  setShowKalendarModal: React.Dispatch<React.SetStateAction<boolean>>\r\n  veranstaltungsIds: number[]\r\n  selectedData: any[]\r\n}\r\n\r\nexport default function GenerateKalendarModal(props: kalendarModalInterface) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  let downloadUrl: string = \"\";\r\n  const [loading, setLoading] = useState(false)\r\n  const gridRef = useRef(null);\r\n  const postGetiCal = usePostRequestCalendar({\r\n    path: (`${baseUrl}/sememesteriCal`),\r\n    veranstaltungsIds: props.veranstaltungsIds\r\n  })\r\n  const postGetCSV = usePostRequestCalendar({\r\n    path: (`${baseUrl}/sememesteriCalAsCSV`),\r\n    veranstaltungsIds: props.veranstaltungsIds\r\n  })\r\n  const {getCalendarEmailResponse} = usePostRequestCalendarEmail({\r\n    path: `${baseUrl}/sememesteriCalEmail`,\r\n    body: {\r\n      veranstaltungsIds: props.veranstaltungsIds,\r\n      email: email\r\n    }\r\n  })\r\n\r\n  const onButtonClickDownloadCalendar = () => {\r\n    setLoading(true)\r\n    const downloadCalendar = () => {\r\n      postGetiCal.getCalendar().then(blob => {\r\n        setLoading(false)\r\n        saveAs(blob, 'calendar.ics')\r\n        props.setShowKalendarModal(false)\r\n        setError(\"\")\r\n      })\r\n      .catch(err => {\r\n          setError(err.message)\r\n          console.log(error)\r\n          setLoading(false)\r\n        }\r\n      );\r\n    }\r\n    downloadCalendar();\r\n  }\r\n\r\n  const onButtonClickDownloadCalendarAsCsv = () => {\r\n    setLoading(true)\r\n    const downloadCalendar = () => {\r\n      postGetCSV.getCalendar().then(blob => {\r\n        setLoading(false)\r\n        saveAs(blob, 'calendar.csv')\r\n        props.setShowKalendarModal(false)\r\n        setError(\"\")\r\n      })\r\n      .catch(err => {\r\n          setError(err.message)\r\n          console.log(error)\r\n          setLoading(false)\r\n        }\r\n      );\r\n    }\r\n    downloadCalendar();\r\n  }\r\n\r\n  const onEmailWantToSchick = () => {\r\n    setLoading(true)\r\n    const sentCalendarEmail = () => {\r\n      getCalendarEmailResponse()\r\n        .then(async response => {\r\n          setLoading(false)\r\n          alert(await response.text())\r\n          setError(\"\")\r\n          props.setShowKalendarModal(false)\r\n        })\r\n        .catch(err => {\r\n            setError(err.message)\r\n            console.log(error)\r\n            setLoading(false)\r\n          }\r\n        );\r\n    }\r\n    sentCalendarEmail();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.showKalendarModal ?\r\n        <div className={\"container flex mx-auto z-10 absolute inset-0 justify-center rounded-box h-screen\"}>\r\n          <div className={\"m-auto rounded-box bg-base-300 md:w-3/4 w-full xl:w-2/3 2xl:1 h-screen flex-none z-20\"} >\r\n            <div className={\"h-30 p-4\"}>\r\n              {error.length > 0 ? <Error msg={error} /> : null}\r\n              <div className={\"grid grid-cols-2 grid-rows-1 gap-4\"}>\r\n                <button className={`btn btn-lg w-full mb-4 ${loading ? 'loading' : null}`} type={\"submit\"}\r\n                        disabled={props.veranstaltungsIds.length === 0 || loading}\r\n                        onClick={() => {\r\n                          downloadUrl = (`${baseUrl}/sememesteriCal`)\r\n                          console.log(downloadUrl)\r\n                          onButtonClickDownloadCalendar()\r\n                        }}>Download calendar.ics</button>\r\n                <button className={`btn btn-lg w-full mb-4 ${loading ? 'loading' : null}`} type={\"submit\"}\r\n                        disabled={props.veranstaltungsIds.length === 0 || loading}\r\n                        onClick={() => {\r\n                          downloadUrl = `${baseUrl}/sememesteriCalAsCSV`\r\n                          onButtonClickDownloadCalendarAsCsv()\r\n                        }}>Download Kalender as CSV (BETA)</button>\r\n              </div>\r\n              <div className={\"rounded-box bg-base-200 h-6 w-full mb-4\"}><p className={\"w-full text-center\"}>ODER</p></div>\r\n              <div className={\"rounded-box bg-base-300 grid grid-cols-2 gap-4 mb-4 w-auto\"}>\r\n                <input\r\n                  className=\"appearance-none w-full bg-base-200 border border-white rounded py-4 px-4 leading-tight focus:outline-none focus:bg-base-400 text-2xl\"\r\n                  id=\"grid-first-email\" type=\"email\" placeholder=\"E-Mail\" onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <button className={`btn btn-lg w-full ${loading ? 'loading' : null}`} type={\"submit\"}\r\n                        disabled={props.veranstaltungsIds.length === 0 || loading || email.length === 0}\r\n                        onClick={onEmailWantToSchick}>Schick's per E-Mail\r\n                </button>\r\n              </div>\r\n              <button className={\"btn btn-md w-full mb-4\"} onClick={() => {\r\n                props.setShowKalendarModal(false)\r\n                setError(\"\")\r\n              }} disabled={loading}>Abbrechen\r\n              </button>\r\n            </div>\r\n            <p className={\"text-3xl ml-4\"}>Ausgewählte Module/Veranstaltungen</p>\r\n            <div className={\"ag-theme-alpine-dark rounded-box p-4 bg-base-300 h-screen\"} >\r\n              <AgGridReact\r\n                ref={gridRef}\r\n                rowData={props.selectedData}\r\n                // @ts-ignore\r\n                onFirstDataRendered={() => gridRef.current.api.sizeColumnsToFit()}\r\n              >\r\n                <AgGridColumn field=\"name\" width={380}\r\n                              headerName={\"Veranstaltung\"}/>\r\n                <AgGridColumn field=\"studienGangSemester\" width={400} headerName={\"Fachbereich / Semester\"}/>\r\n              </AgGridReact>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n","interface PostRequestProps {\n  readonly path: string;\n  readonly body: any;\n}\n\nexport default function usePostRequestCalendar({ path, body: {veranstaltungsIds, email} }: PostRequestProps) {\n  const getCalendarEmailResponse = () => fetch(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({veranstaltungsIds, email} )\n  }).then(async (response) => {\n    if (!response.ok){\n      return response.text().then(text => {throw Error(text + \"soos\")});\n    }\n    return response\n  });\n\n  return { getCalendarEmailResponse  };\n}\n","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport Veranstaltung from \"../../Objects/Veranstaltung\";\nimport {baseUrl} from \"../../Objects/endpoints\";\nimport useGetRequest from \"../../api/useGetRequest\";\nimport Loading from \"../../Loading\";\nimport Error from \"../../Error\";\nimport {AgGridColumn, AgGridReact} from \"ag-grid-react\";\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine-dark.css';\nimport '../../index.scss'\nimport GenerateKalendarModal from \"./GenerateKalendarModal/GenerateKalendarModal\";\n\ninterface veranstaltungsProp {\n  readonly veranstaltung: string\n}\n\nexport default function VeranstaltungsSelector({veranstaltung}: veranstaltungsProp) {\n  const history = useHistory();\n  const [veranstaltungsData, setVeranstaltungsData] = useState([] as Veranstaltung[]);\n  const [selectedDataProp, setSelectedDataProp] = useState([])\n  const [veranstaltungsIds, setVeranstaltungsIds] = useState([] as number[])\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showKalendarModal, setShowKalendarModal] = useState(false);\n  const veranstaltungsPath = `${baseUrl}/getVeranstaltungByStudiengang?studiengang=${veranstaltung}`;\n  const {getData} = useGetRequest({path: veranstaltungsPath})\n  const gridRef = useRef(null)\n\n  useEffect(() => {\n    async function fetchData() {\n      await getData().then(function (json) {\n        setVeranstaltungsData(json);\n        setLoading(false)\n        setError(\"\")\n      }).catch(err => {\n          console.log(err.message)\n          setError(err.message)\n          setLoading(false);\n        }\n      );\n    }\n\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function showHelp() {\n    history.push(\"/FAQ\");\n  }\n\n  const showCalendarGenerationModal = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    let veranstaltungsIdsTemp = [] as number[]\n    // @ts-ignore\n    const selectedNodes = gridRef.current.api.getSelectedNodes()\n    // @ts-ignore\n    const selectedData = selectedNodes.map(node => node.data)\n    // @ts-ignore\n    selectedData.map(node => veranstaltungsIdsTemp.push(node.id))\n    setSelectedDataProp(selectedData)\n    setVeranstaltungsIds(veranstaltungsIdsTemp)\n    e.stopPropagation()\n    setError(\"\")\n    setShowKalendarModal(true);\n  }\n\n  if (loading) {\n    return <Loading/>\n  }\n\n  if (error.length > 0) {\n    return (\n      <Error msg={error}/>\n    );\n  }\n\n  return (\n    <>\n      <GenerateKalendarModal showKalendarModal={showKalendarModal} setShowKalendarModal={setShowKalendarModal}\n                             selectedData={selectedDataProp} veranstaltungsIds={veranstaltungsIds}/>\n\n      <div className={showKalendarModal ? \"filter blur-lg\" : \"\"} onClick={() => setShowKalendarModal(false)}>\n        <div className={\"grid grid-rows-3 grid-rows-none gap-4 2xl:w-10/12 mb-4 xl:w-11/12 m-auto\"}>\n          <div className={\"rounded-box md:p-4 p-2 bg-base-300\"}>\n            <h2 className={\"md:text-4xl text-2xl mb-2 text-center\"}>H-BRS Kalendergenerator v1.1</h2>\n          </div>\n          <div\n            className={\"grid md:grid-cols-3 md:grid-rows-1 grid-cols-1 grid-rows-3 gap-4 rounded-box p-3 bg-base-300\"}>\n            <button onClick={e => showCalendarGenerationModal(e)} className={\"btn md:btn-lg w-full\"}>Hol dir deinen\n              Kalender!\n            </button>\n            <a href={\"https://github.com/Hochgesand/H-BRSiCalGenerator\"} target=\"_blank\" rel=\"noopener noreferrer\">\n              <button className={\"btn md:btn-lg w-full\"}>Gib mir einen Stern auf Github ❤</button>\n            </a>\n            <button className={\"btn md:btn-lg w-full\"} onClick={showHelp}>FAQ / HILFE!</button>\n          </div>\n\n          <div className={\"ag-theme-alpine-dark rounded-box p-3 bg-base-300 md:w-3/4 w-full m-auto\"} style={{height: 800}}>\n            <AgGridReact\n              rowData={veranstaltungsData}\n              enableRangeSelection={true}\n              rowSelection={\"multiple\"}\n              ref={gridRef}\n              rowMultiSelectWithClick={true}\n              // @ts-ignore\n              onFirstDataRendered={() => gridRef.current.api.sizeColumnsToFit()}\n            >\n              <AgGridColumn field=\"name\" width={380} sortable={true} filter={true} checkboxSelection={true}\n                            resizable={true}\n                            headerName={\"Veranstaltung\"} floatingFilter={true}/>\n              <AgGridColumn field=\"prof\" width={150} sortable={true} filter={true} resizable={true}\n                            floatingFilter={true}/>\n            </AgGridReact>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n}\n","import VeranstaltungsSelector from \"./VeranstaltungsSelector/VeranstaltungsSelector\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {baseUrl} from \"../Objects/endpoints\";\r\nimport useGetRequest from \"../api/useGetRequest\";\r\nimport Loading from \"../Loading\";\r\nimport Error from \"../Error\";\r\n\r\nexport default function Lander() {\r\n  const studiengaengePath = `${baseUrl}/getStudiengaenge`;\r\n  const {getData} = useGetRequest({path: studiengaengePath})\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [studiengaenge, setStudiengaenge] = useState([] as string[]);\r\n  const [selectedStudiengang, setSelectedStudiengang] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await getData().then(function (json) {\r\n        setStudiengaenge(json);\r\n        setLoading(false)\r\n        setError(\"\")\r\n      }).catch(err => {\r\n          console.log(err.message)\r\n          setError(err.message)\r\n          setLoading(false);\r\n        }\r\n      );\r\n    }\r\n\r\n    fetchData();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (loading) {\r\n    return <Loading/>\r\n  }\r\n\r\n  if (error.length > 0) {\r\n    return (\r\n      <Error msg={error}/>\r\n    );\r\n  }\r\n\r\n  return(\r\n    <div>\r\n        {selectedStudiengang.length === 0 ? <div className={\"rounded-box p-3 bg-base-300 md:w-1/3 w-full\"}>\r\n          <div className={\"rounded-box p-4 bg-base-300 mb-4\"}>\r\n            <h2 className={\"text-4xl mb-2\"}>H-BRS Kalendergenerator v1.1</h2>\r\n            <p>Ich übernehme keine Haftung für die Richtigkeit der generierten Daten, alles nach bestem Wissen und\r\n              Gewissen. </p>\r\n            <p>Fehler bitte an a@andrevr.de melden.</p>\r\n            <p>Ich habs nicht fürs Smartphone entwickelt, benutzt es lieber am PC. Mobile first ist noch nicht ganz so meine stärke</p>\r\n            <p>Wenn's euch gefällt, empfehlt es euren Kommilitonen! 😁</p>\r\n          </div>\r\n          <div className={\"dropdown w-full\"}>\r\n          <div tabIndex={0} className=\" btn btn-lg w-full\">Bitte Studiengang auswählen!</div>\r\n          <ul tabIndex={0} className=\"p-2 shadow menu dropdown-content bg-base-300 rounded-box w-full\">\r\n            {studiengaenge.map(studiengang => (\r\n              <li className={\"m-1\"}>\r\n                <button\r\n                  className={\"btn\"}\r\n                  onClick={() => setSelectedStudiengang(studiengang)}\r\n                >\r\n                  {studiengang}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div> : \"\"}\r\n\r\n      {selectedStudiengang.length !== 0 ? <VeranstaltungsSelector veranstaltung={selectedStudiengang}/> : \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport Lander from \"./actualApp/Lander\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Lander/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useHistory} from \"react-router-dom\";\n\nexport default function FAQ(){\n  let history = useHistory();\n  return(\n    <div className={\"p-5 flex-col gap-3\"}>\n      <button\n        className=\"btn btn-lg mb-4\"\n        onClick={() => history.goBack()}>\n        Back\n      </button>\n      <div className={\"rounded-box p-4 bg-base-300 flex-grow-0 w-3/4\"}>\n        <p className={\"text-3xl\"}>Anleitung:</p>\n        <p className={\"text-2xl\"}>Schritt 1:</p>\n        <p>Wähle dir einfach alle Veranstaltungen aus die du besuchen möchtest.\n          Du kannst die Tabelle nach belieben sortieren und mit dem Burgerbutton kannst du auch gezielt\n          nach Keywords suchen. Wenn du alle Veranstaltungen ausgewählt hast klicke auf \"Hol dir deinen Kalender\" ... </p>\n        <p className={\"text-2xl\"}>Schritt 2: </p>\n        <p>Jetzt hast du zwei Möglichkeiten:\n          1.: Klicke auf \"Download calendar.ics\" und importiere es wie in Beispiel 3 einfach selber am Rechner.\n          2.: Tippe deine E-Mail Adresse ein und lasse es dir bequem per E-Mail Schicken. Klicke dafür einfach nachdem\n           du deine E-Mail Adresse eingetragen hast auf \"Schick's per E-Mail\".\n          Damit kriegste dann die ics auf's Handy und kannst sie ggf. sogar noch einfacher importieren.\n        </p>\n        <p className={\"text-2xl\"}>Misc:</p>\n        <p>Packages und Technologien die ich benutzt habe:</p>\n        <p>Spring Boot (Java):</p>\n        <ul>\n          <li> - Apache POI um Exceltabellen zu parsen</li>\n          <li> - ical4j um den Calender zu generieren</li>\n        </ul>\n        <p>React:</p>\n        <ul>\n          <li> - AGGrid für die Tabelle, kein Bock gehabt selber Sortieralgorithmen zu implementieren</li>\n          <li> - Locker noch ca. 2000 Packages mehr die mit React gekommen sind, npm macht npm sachen</li>\n          <li> - TailwindCSS für's CSS</li>\n        </ul>\n        <p className={\"text-2xl\"}>FAQ:</p>\n        <p>Q: Warum machste die App nicht responsive damit ich das auch bequem auf dem Handy nutzen kann?</p>\n        <p>A: Warum nutzt du die App nicht einfach auf dem Rechner und schickst dir den Stundenplan per E-Mail?</p>\n        <p>Q: Warum werden manche Veranstaltungen doppelt angezeigt?</p>\n        <p>A: Manche Veranstaltungen gibt es Fachbereich/Semester übergreifend und ich habe noch kein Ablauf im Backend\n          implementiert die schaut ob die Eventuhrzeiten/Räume übereinstimmen damit ich gewährleisten kann das die auch\n          tatsächlich die gleichen Veranstaltungen sind. Beispielsweise könnte ja eine Veranstaltung für Nachschreiber\n          existieren und damit z.B. in einem anderen Raum stattfinden.\n          Wählt daher immer die Veranstaltung für euren Fachbereich/Semester.</p>\n        <p>Q: Wie kriegst du die Stundenpläne in die Anwendung importiert?</p>\n        <p>A: Ich zieh mir einfach die Stundenpläne von Eva und aktualisiere Sie jeden Tag damit alle\n          Änderungen frisch auf meinem Backend liegen.</p>\n        <p>Q: Welche Daten erhebst du?</p>\n        <p>A: Fast keine. Ich logge nichts und möchte das auch nicht. Die einzigen Dinge die ich speichere sind IP Adressen die die Api missbrauchen.\n          Wie ich die erfasse erkläre ich weiter unten.\n          Ich habe überlegt ob ich vielleicht Metriken darüber erfasse und vielleicht jedes Semesterende anonymisierte\n          Statistiken bereitstelle (das erstellen eines Kalenders ist sowieso anonym solange man es ohne E-Mail macht).\n          Das wäre vielleicht interessant. Allerdings bin ich mir da noch nicht ganz so sicher ob ich das mache.\n          Wenn ich daran arbeite, werde ich das hier vorher bekannt geben. Ich nutze keine Daten ohne vorher zu fragen.</p>\n        <p>Q: Und wann werde ich jetzt genau geloggt?</p>\n        <p>A: Sobald ihr ein 429er Error bekommt (Too Many Requests) wird eure IP Adresse gespeichert. Wenn diese IP\n          Adresse weiterhin versucht Requests zu schicken wird sie dauerhaft gebannt. Wenn das Problem öfter auftritt\n          werde ich die IP Adresse dem entsprechenden Anbieter melden. Dafür müsst ihr aber schon sehr aggressiv vorgehen.\n          Wenn ihr blockiert werdet weil ihr spaß dran habt meine Anwendung zu testen oder eure Hackerskills beweisen\n          wollt, dürft ihr das gerne tun. Meldet euch bei mir ich hab damit keine Probleme, ganz im gegenteil, ich würde mich sogar freuen :)\n          Schickt mir einfach ne E-Mail an a@andrevr.de.</p>\n      </div>\n\n      <div className={\"mt-5\"}>\n        <p className={\"text-3xl\"}>Beispiel 1: \"Ich bin bei Herr Berrendorf in EidiP und gehöre der Gruppe D an.</p>\n        <img src={process.env.PUBLIC_URL + \"/FUiTCuS2BJ.gif\"} alt={\"\"}/>\n      </div>\n      <div className={\"mt-5\"}>\n        <p className={\"text-3xl\"}>Beispiel 2: \"Hilfe ich sehe nicht den ganzen Text!</p>\n        <img src={process.env.PUBLIC_URL + \"/aTkfaQusHi.gif\"} alt={\"\"}/>\n      </div>\n      <div className={\"mt-5\"}>\n        <p className={\"text-3xl\"}>Beispiel 3: \"Is ja alles schön und toll, aber was mache ich jetzt mit dieser komischen\n          calendar.ics Datei (Beispiel an Google Kalender)\"</p>\n        <img src={process.env.PUBLIC_URL + \"/Z795yqtZO4.gif\"} alt={\"\"}/>\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport FAQ from \"./FAQ/FAQ\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/FAQ\">\n          <FAQ/>\n        </Route>\n        <Route path=\"/\">\n          <App/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}